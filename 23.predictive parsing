#include <stdio.h>
#include <string.h>
#include <stdbool.h>

char production[4][10] = {
    "E->TA",
    "A->+TA",
    "A->e",
    "T->i"
};

char terminals[] = "i+";
char nonTerminals[] = "EAT";

bool isTerminal(char symbol) {
    return strchr(terminals, symbol) != NULL;
}

bool isNonTerminal(char symbol) {
    return strchr(nonTerminals, symbol) != NULL;
}

void parse(char input[], int length) {
    int stackTop = 0;
    char stack[100];
    stack[stackTop] = '$'; // Stack bottom marker
    stackTop++;

    int inputIndex = 0;
    char currentSymbol = input[inputIndex];

    stack[stackTop] = 'E'; // Starting non-terminal
    while (stackTop >= 0) {
        if (stack[stackTop] == currentSymbol) {
            stackTop--;
            inputIndex++;
            currentSymbol = input[inputIndex];
        } else if (isTerminal(stack[stackTop])) {
            printf("Error: Mismatch for terminal %c\n", stack[stackTop]);
            break;
        } else if (isNonTerminal(stack[stackTop])) {
            char nonTerminal = stack[stackTop];
            int productionIndex = -1;
            for (int i = 0; i < 4; i++) {
                if (production[i][0] == nonTerminal) {
                    productionIndex = i;
                    break;
                }
            }
            if (productionIndex == -1) {
                printf("Error: No production found for non-terminal %c\n", nonTerminal);
                break;
            }
            printf("%s\n", production[productionIndex]);
            stackTop--;
            char* productionRHS = production[productionIndex] + 3;
            for (int i = strlen(productionRHS) - 1; i >= 0; i--) {
                stackTop++;
                stack[stackTop] = productionRHS[i];
            }
        }
    }
    if (stackTop < 0 && inputIndex == length) {
        printf("Parsing successful!\n");
    } else {
        printf("Parsing failed!\n");
    }
}

int main() {
    char input[] = "i+i$";
    int length = strlen(input);
    parse(input, length);
    return 0;
}
